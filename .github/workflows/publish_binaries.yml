name: Publish Binaries

on:
  push:
    branches: main
  workflow_dispatch:

jobs:
  client:
    strategy:
      fail-fast: false
      matrix:
        board:
          - target: linux-x64
          - target: win-x64
          - target: osx-x64

    runs-on: self-hosted
    env:
      DOTNET_INSTALL_DIR: "~/dotnet"
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Publish Console Client
        run: |
          cd src/PV260.Client.ConsoleApp
          dotnet publish "PV260.Client.ConsoleApp.csproj" --runtime ${{ matrix.board.target }} -p:PublishSingleFile=true -p:RuntimeIdentifierOverride=${{ matrix.board.target }} --configuration Release --output publish

      - name: Add target platform to executable name
        run: |
          if [[ "${{ matrix.board.target }}" == *"win-x64"* ]]; then
            mv src/PV260.Client.ConsoleApp/publish/PV260.Client.ConsoleApp.exe src/PV260.Client.ConsoleApp/publish/PV260.Client.ConsoleApp-${{ matrix.board.target }}.exe
          else
            mv src/PV260.Client.ConsoleApp/publish/PV260.Client.ConsoleApp src/PV260.Client.ConsoleApp/publish/PV260.Client.ConsoleApp-${{ matrix.board.target }}
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: client-bin-${{ matrix.board.target }}
          path: src/PV260.Client.ConsoleApp/publish/*

  server:
    strategy:
      fail-fast: false
      matrix:
        board:
          - target: linux-x64
          - target: win-x64
          
    runs-on: self-hosted
    env:
      DOTNET_INSTALL_DIR: "~/dotnet"
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Publish API Server
        run: |
          cd src/PV260.API.App
          dotnet publish "PV260.API.App.csproj" --configuration Release --output publish/${{ matrix.board.target }} --runtime ${{ matrix.board.target }} -p:RuntimeIdentifierOverride=${{ matrix.board.target }} --self-contained


      - name: Pack each target platform to zip
        run: |
          cd src/PV260.API.App/publish
          for d in */; do
            cd $d
            zip -r "server-bin-${d%/}.zip" *
            mv "server-bin-${d%/}.zip" ..
            cd ..
          done

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: server-bin-${{ matrix.board.target }}
          path: src/PV260.API.App/publish/*.zip

  release:
    runs-on: self-hosted
    permissions: 
      contents: write
      packages: write
      id-token: write
      deployments: read
      issues: read
      discussions: read
      pages: read
      pull-requests: read
      statuses: read
    needs: [client, server]
    steps:
      - uses: actions/checkout@v4

      - name: Download Client Artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: 'client-bin-*'
          path: ${{ github.workspace }}/release
          merge-multiple: true

      - name: Download Server Artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: 'server-bin-*'
          path: ${{ github.workspace }}/release
          merge-multiple: true

      - name: Create Dev Release
        uses: "marvinpinto/action-automatic-releases@v1.2.1"
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          title: "Latest Build - ${{ github.run_number }}"
          automatic_release_tag: "latest"
          files: "release/*"
