name: Build API Server Docker image and deploy it on Staging server

on:
  push:
    branches: main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  REGISTRY_USER: ${{ github.actor }}
  REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    environment: staging
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      id-token: write
    steps:
    - uses: actions/checkout@v4

    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ vars.IMAGE_NAME }}

    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ env.REGISTRY_USER }}
        password: ${{ env.REGISTRY_PASSWORD }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Setup Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push Docker image
      id: push
      uses: docker/build-push-action@v6
      with:
        platforms: linux/amd64
        context: ./src/
        file: ./src/PV260.API.App/Dockerfile
        push: true
        tags: ${{ env.REGISTRY }}/${{ vars.IMAGE_NAME }}
        labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: build
    environment: staging
    runs-on: self-hosted-docker
    steps:
      - uses: actions/checkout@v4

      - name: Create .env file on the Staging server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            mkdir -p ~/pv260-staging
            rm -f ~/pv260-staging/.env

            echo "API_PORT=${{ vars.API_PORT }}" >> ~/pv260-staging/.env
            echo "IMAGE_NAME=${{ env.REGISTRY }}/${{ vars.IMAGE_NAME }}" >> ~/pv260-staging/.env
            echo "DB_SA_PASSWORD=${{ secrets.DB_SA_PASSWORD }}" >> ~/pv260-staging/.env
            echo "EMAIL_API_KEY=${{ secrets.EMAIL_API_KEY }}" >> ~/pv260-staging/.env

      - name: Copy docker-compose file to the Staging server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: docker-compose.staging.yaml
          target: ~/pv260-staging

      - name: Deploy the package on the Staging server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd ~/pv260-staging
            docker login ${{ env.REGISTRY }} -u ${{ env.REGISTRY_USER }} -p ${{ env.REGISTRY_PASSWORD }}
            docker compose -f docker-compose.staging.yaml down
            docker compose -f docker-compose.staging.yaml pull
            docker compose -f docker-compose.staging.yaml up -d
